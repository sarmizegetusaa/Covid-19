{"version":3,"sources":["Components/Header.js","Components/Timeline.js","Components/CumulativeCases.js","Components/MapCovid.js","Components/Dashboard.js","Components/Data.js","Components/ChartFirstPage.js","Components/GetDimensions.js","utils/useResizeObserver.js","Components/BarChart.js","Components/StackedAreaChart.js","Components/Charts.js","App.js","reducers/dataReducer.js","serviceWorker.js","index.js"],"names":["Header","toggleTimeline","props","activeCumulative","activeTimeline","nowCase","toggleCumulative","displayFirstPage","id","className","onClick","this","xmlns","width","height","viewBox","d","fill","to","Component","connect","state","dispatch","active","type","Timeline","timer","timelineCasesLength","timelineCases","length","confirmed","addNowCase","intervalId","setInterval","addIntervalId","clearInterval","cases","style","animation","timelineLength","timestamp","map","location","index","radius","d3","domain","minRadius","maxRadius","range","Marker","key","position","icon","L","divIcon","html","toString","iconSize","point","parseInt","Popup","undefined","locations","CumulativeCases","radiusC","lat","long","provinceState","countryRegion","deaths","recovered","MapCovid","arrayOfCases","push","Math","min","apply","max","setMinRadius","setMaxRadius","center","zoom","TileLayer","url","attribution","Dashboard","border","borderTop","handleChangeConfirm","onChangeButton","handleChangeActive","handleChangeRecovered","handleChangeDeaths","totalDashboad","casesC","dashboardTimeline","dashCases","reduce","accumulator","currentVal","confirmedLocations","allLocations","sort","a","b","totalTimelineCases","charAt","toUpperCase","slice","globalValues","isNaN","idx","Data","typeOfCases","uniqueNames","allTimelineCases","csvData","forEach","typeIdx","fetch","then","res","text","data","allTextLines","split","headers","date","setDate","i","setTimestamp","filter","all","element","find","computedState","setTimelineLength","setTimeout","setDashboardTimeline","addTimelineCases","catch","setState","hasErrors","json","re","stateNames","computedStates","mapLocations","concat","addLocations","countries","country","addAllLocations","err","console","log","value","addGlobalValues","ChartFirstPage","data-aos","data-aos-offset","data-aos-delay","data-aos-duration","data-aos-easing","xmlnsXlink","version","x","y","enableBackground","transition","transform","getWindowDimensions","window","innerWidth","innerHeight","useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","entry","contentRect","observe","unobserve","Barchart","useSelector","dataArr","svgRef","useRef","wrapperRef","hide","hideChartFirstPage","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","chartStarted","wait","millis","Promise","resolve","reject","startChart","rank","bars","labels","textTween","axis","ticker","svg","now","node","append","barSize","attr","margin","top","n","formatDate","keyframes","end","dt","Date","getDate","g","ticks","tickSizeOuter","tickSizeInner","padding","_","call","selectAll","remove","select","t","textContent","formatNumber","label","name","join","enter","prev","get","bandwidth","update","exit","next","tween","bar","color","Array","from","names","array","dat","obj","Set","dateValues","rollup","ka","kb","nameframes","groups","flatMap","Map","right","bottom","left","duration","ease","rangeRound","updateAxis","updateBars","updateLabels","updateTicker","keyframe","startC","getBoundingClientRect","Fragment","textAlign","StackedAreaChart","timelinecasesloaded","timelineCasesLoaded","Aos","init","arrayCases","computedData","typeCase","record","dateStr","case","xValue","parse","dateObj","yValue","sumstat","stackedData","keys","values","xAxis","maxYDomain","tickFormat","number","replace","brush","extent","on","selection","invert","areaChart","move","idleTimeout","idled","area","y0","y1","div","dataSet","currentElement","currentElementString","String","popupElements","pageX","pageY","Charts","BarChart","App","path","component","exact","initState","numberOfCases","dataReducer","action","newState","Boolean","hostname","match","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9ce277dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nclass Header extends Component{\n\n  toggleTimeline = () => {\n    const active = {\n      activeCumulative: false,\n      activeTimeline: true,\n      nowCase: 3\n    }\n    this.props.toggleTimeline(active);\n  };\n\n  toggleCumulative = () => {\n    const active = {\n      activeCumulative: true,\n      activeTimeline: false\n    }\n    this.props.toggleCumulative(active);\n  };\n\n  displayFirstPage = () => {\n    const displayFirstPage = 'show';\n    this.props.displayFirstPage(displayFirstPage)\n  }\n\n  render(){\n\n    return (\n      <div>\n        <div id=\"container-header\">\n          <div id=\"header\">\n            <div className=\"page-btns\">\n              <button id=\"recent-cases-btn\" onClick={this.toggleCumulative}> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M20.763 10.377c-.694.519-1.537.801-2.403.801-1.607 0-2.415-1.963-1.282-3.095.614-.615 1.406-1.009 2.266-1.133 1.621-.233 2.334-2.244 1.142-3.437s-3.203-.479-3.437 1.142c-.123.857-.52 1.653-1.132 2.266-1.138 1.138-3.095.329-3.095-1.282 0-.869.28-1.708.801-2.403.983-1.312.061-3.236-1.623-3.236-1.683 0-2.606 1.923-1.623 3.237.519.693.801 1.537.801 2.403 0 1.61-1.956 2.421-3.095 1.282-.614-.614-1.008-1.405-1.132-2.266-.233-1.621-2.243-2.334-3.436-1.141s-.48 3.203 1.141 3.436c.857.123 1.653.52 2.266 1.132 1.138 1.139.329 3.095-1.282 3.095-.869 0-1.707-.28-2.403-.801-1.313-.983-3.237-.061-3.237 1.623 0 1.683 1.923 2.606 3.237 1.623.693-.519 1.537-.801 2.403-.801 1.61 0 2.421 1.956 1.282 3.095-.614.615-1.406 1.009-2.266 1.133-1.621.233-2.334 2.244-1.142 3.437s3.203.479 3.437-1.142c.123-.857.52-1.653 1.132-2.266 1.139-1.138 3.095-.329 3.095 1.282 0 .869-.28 1.708-.801 2.404-.981 1.308-.064 3.235 1.623 3.235 1.677 0 2.611-1.919 1.621-3.24-.518-.689-.799-1.528-.799-2.39 0-1.615 1.957-2.432 3.095-1.293.615.615 1.009 1.406 1.133 2.267.233 1.621 2.244 2.334 3.437 1.142 1.19-1.19.483-3.206-1.146-3.437-.854-.121-1.646-.515-2.255-1.125-1.143-1.141-.337-3.102 1.274-3.102.87 0 1.708.28 2.404.801 1.309.981 3.236.064 3.236-1.623 0-1.686-1.926-2.605-3.237-1.623zm-10.728 4.296c-.547 0-.99-.443-.99-.99s.443-.99.99-.99.99.443.99.99-.443.99-.99.99zm1.262-3.143c-.858 0-1.553-.695-1.553-1.553s.695-1.553 1.553-1.553 1.553.695 1.553 1.553-.695 1.553-1.553 1.553zm2.928 2.969c-.727 0-1.315-.589-1.315-1.315s.589-1.315 1.315-1.315 1.315.589 1.315 1.315-.589 1.315-1.315 1.315z\" fill=\"#fff\"/></svg> <Link to='/'>Recent Cases</Link></button>\n              <button id=\"timeline-btn\" onClick={this.toggleTimeline}><Link to='/'> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M11 6v8h7v-2h-5v-6h-2zm10.854 7.683l1.998.159c-.132.854-.351 1.676-.652 2.46l-1.8-.905c.2-.551.353-1.123.454-1.714zm-2.548 7.826l-1.413-1.443c-.486.356-1.006.668-1.555.933l.669 1.899c.821-.377 1.591-.844 2.299-1.389zm1.226-4.309c-.335.546-.719 1.057-1.149 1.528l1.404 1.433c.583-.627 1.099-1.316 1.539-2.058l-1.794-.903zm-20.532-5.2c0 6.627 5.375 12 12.004 12 1.081 0 2.124-.156 3.12-.424l-.665-1.894c-.787.2-1.607.318-2.455.318-5.516 0-10.003-4.486-10.003-10s4.487-10 10.003-10c2.235 0 4.293.744 5.959 1.989l-2.05 2.049 7.015 1.354-1.355-7.013-2.184 2.183c-2.036-1.598-4.595-2.562-7.385-2.562-6.629 0-12.004 5.373-12.004 12zm23.773-2.359h-2.076c.163.661.261 1.344.288 2.047l2.015.161c-.01-.755-.085-1.494-.227-2.208z\" fill=\"#fff\"/></svg> Timeline</Link></button>\n              <button id=\"barchart\" onClick={this.displayFirstPage}><Link to='/charts'> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\"><path d=\"M7 24h-6v-6h6v6zm8-9h-6v9h6v-9zm8-4h-6v13h6v-13zm0-11l-6 1.221 1.716 1.708-6.85 6.733-3.001-3.002-7.841 7.797 1.41 1.418 6.427-6.39 2.991 2.993 8.28-8.137 1.667 1.66 1.201-6.001z\" fill=\"#fff\"/></svg> Statistics</Link></button>\n            </div>\n          </div>\n          <div className=\"title\">COVID-19 Global Cases</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    activeCumulative: state.activeCumulative,\n    activeTimeline: state.activeTimeline,\n    nowCase: state.nowCase\n  }\n}\nconst mapDispatchToProps = (dispatch) =>{\n  return {\n    toggleTimeline: (active) => { dispatch({type: 'TOGGLE_TIMELINE', active:active})},\n    toggleCumulative: (active) => { dispatch({type: 'TOGGLE_CUMULATIVE', active:active})},\n    displayFirstPage: (displayFirstPage) => { dispatch({type: 'SET_FIRSTPAGE', displayFirstPage:displayFirstPage})}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react';\nimport L from 'leaflet';\nimport * as d3 from 'd3';\nimport { Marker, Popup } from 'react-leaflet';\nimport { connect } from 'react-redux';\n\nclass Timeline extends Component {\n\n  componentDidMount(){\n    let intervalId = setInterval(this.timer, 150);\n    this.props.addIntervalId(intervalId);\n  }\n  \n  componentWillUnmount(){\n    clearInterval(this.props.intervalId)\n  }\n  \n  timer = () => {\n    let timelineCasesLength;\n    if(this.props.timelineCases.length === 0){\n      return\n    }\n    if(this.props.activeTimeline === true){\n      // setTimeout(()=>{\n        timelineCasesLength = this.props.timelineCases.confirmed[0].length;\n        if(this.props.nowCase < timelineCasesLength -1){\n          this.props.addNowCase(this.props.nowCase +1)\n        }\n      // }, 500)\n    }\n  }\n  render() {\n    let cases = this.props.cases;\n    return (\n      <div>\n        {\n          ! this.props.activeCumulative ?\n          (\n          <div id=\"timestamp-watch-container\">\n            <div id=\"timestamp\"></div>\n            <div className=\"watch_outline\">\n            <div \n              className=\"minutes\"\n              style={{animation: (this.props.nowCase +1 === this.props.timelineLength) ? \"none\" : \"spinTheClock 1s infinite linear\" }}\n            >\n            </div>\n          </div> \n          { this.props.timestamp[this.props.nowCase-4] }\n        </div>) :\n        null\n        }\n        \n        {this.props.timelineCases[`${cases}`] ? (this.props.timelineCases[`${cases}`].map((location, index)=>{\n          let radius = d3.scaleLinear()\n            .domain([this.props.minRadius, this.props.maxRadius])\n            .range([4, 30]);\n          return(\n              <Marker\n                key={index}\n                position={[\n                  (location[2] !== null) ? location[2] : 0,\n                  (location[3] !== null) ? location[3] : 0,\n                ]}\n                icon={L.divIcon({\n                  html: \"\",\n                  className: `marker background-${this.props.cases} ${this.props.activeTimeline.toString()}`,\n                  iconSize: L.point(parseInt(radius(location[this.props.nowCase])), parseInt(radius(location[this.props.nowCase])), true)\n                })}\n                >\n                <Popup>\n                  <div id='popup' className={this.props.activeTimeline.toString()}>\n                    {(location[0] !== undefined ) ? location[0] : null} {location[1]}\n                    <br/>\n                    { \n                      cases === 'confirmed' ? \n                      (<div>Confirmed: <span className='confirmed'>{d3.format(',')(location[this.props.nowCase])}</span></div>) :\n                      null\n                    }\n                    {\n                      cases === 'deaths' ?\n                      (<div>Deaths: <span className='deaths'>{d3.format(',')(location[this.props.nowCase])}</span></div>) :\n                      null\n                    }             \n                   { \n                    cases === 'recovered' ?\n                    (<div>Recovered: <span className='recovered'>{d3.format(',')(location[this.props.nowCase])}</span></div>) :\n                    null\n                   }\n                  </div>\n                </Popup>\n              </Marker>\n          )\n          })) : null\n        } \n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    locations: state.locations,\n    cases: state.cases,\n    activeCumulative: state.activeCumulative,\n    activeTimeline: state.activeTimeline,\n    timelineCases: state.timelineCases,\n    nowCase: state.nowCase,\n    intervalId: state.intervalId,\n    minRadius: state.minRadius,\n    maxRadius: state.maxRadius,\n    timestamp: state.timestamp,\n    timelineLength: state.timelineLength\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addNowCase: (nowCase) => { dispatch({type: 'ADD_NOWCASE', nowCase: nowCase})},\n    addIntervalId: (intervalId) => { dispatch({type: 'ADD_INTERVALID', intervalId: intervalId})},\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timeline)","import React, { Component } from 'react';\nimport L from 'leaflet';\nimport * as d3 from 'd3';\nimport { Marker, Popup } from 'react-leaflet';\nimport { connect } from 'react-redux';\n\nclass CumulativeCases extends Component {\n  render() {\n    return (\n      <div>\n        {this.props.locations.map((location, index)=>{\n            const radiusC = this.props.cases;\n            let radius = d3.scaleLinear()\n              .domain([this.props.minRadius, this.props.maxRadius])\n              .range([7, 70]);\n              \n            return (\n              <Marker\n                key={index}\n                position={[\n                  (location.lat !== null) ? location.lat : 0,\n                  (location.long !== null) ? location.long : 0,\n                ]}\n                icon={L.divIcon({\n                  html: \"\",\n                  className: `marker background-${this.props.cases} ${this.props.activeCumulative.toString()}`,\n                  iconSize: L.point(parseInt(radius(location[radiusC])), parseInt(radius(location[radiusC])), true)\n                })}\n                >\n                <Popup>\n                  <div id='popup' className={this.props.activeCumulative.toString()}>\n                    {(location.provinceState !== null )? location.provinceState : null} {location.countryRegion}\n                    <br/>\n                    <div>Confirmed: <span className='confirmed'>{d3.format(',')(location.confirmed)}</span></div>\n                    <div>Deaths: <span className='deaths'>{d3.format(',')(location.deaths)}</span></div>\n                    <div>Recovered: <span className='recovered'>{d3.format(',')(location.recovered)}</span></div>\n                    <div>Active: <span className='active'>{d3.format(',')(location.active)}</span></div>\n                  </div>\n                </Popup>\n              </Marker>\n              )\n            }) }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    locations: state.locations,\n    cases: state.cases,\n    activeCumulative: state.activeCumulative,\n    minRadius: state.minRadius,\n    maxRadius: state.maxRadius,\n  }\n}\n\nexport default connect(mapStateToProps)(CumulativeCases)","import React, { Component } from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport { connect } from 'react-redux';\nimport Timeline from './Timeline';\nimport CumulativeCases from './CumulativeCases';\n\nclass MapCovid extends Component{\n  componentDidMount(){\n    let arrayOfCases = [];\n    this.props.locations.map(location => {\n      let radiusC = this.props.cases;\n      arrayOfCases.push(location[radiusC]);\n    })\n    const minRadius = Math.min.apply(Math, arrayOfCases);\n    const maxRadius = Math.max.apply(Math, arrayOfCases);\n    this.props.setMinRadius(minRadius);\n    this.props.setMaxRadius(maxRadius);\n  }\n  componentDidUpdate(){\n    let arrayOfCases = [];\n    this.props.locations.map(location => {\n      let radiusC = this.props.cases;\n      arrayOfCases.push(location[radiusC]);\n    })\n    const minRadius = Math.min.apply(Math, arrayOfCases);\n    const maxRadius = Math.max.apply(Math, arrayOfCases);\n    this.props.setMinRadius(minRadius);\n    this.props.setMaxRadius(maxRadius);\n  }\n  render() {\n    return (\n      <div className='map-container'>\n        <Map className='map' center={[0, 0]} zoom={3}>\n          <TileLayer\n            url='https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png'\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\n            />\n          <CumulativeCases />\n          <Timeline />\n          </Map>\n      </div>)\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    locations: state.locations,\n    cases: state.cases,\n    timelineCases: state.timelineCases\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMinRadius: (minRadius) => { dispatch({type: 'SET_MINRADIUS', minRadius: minRadius})},\n    setMaxRadius: (maxRadius) => { dispatch({type: 'SET_MAXRADIUS', maxRadius: maxRadius})}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MapCovid);","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { connect } from 'react-redux';\n\nclass Dashboard extends Component {\n\n  state = {\n    border:{\n      \"confirmed\": \"1px solid #ad4828\",\n      \"recovered\": \"1px solid #244624\",\n      \"active\": \"1px solid #5c5c39\",\n      \"deaths\": \"1px solid #712424\",\n    },\n    borderTop:{\n      \"confirmed\": \"5px solid #ad4828\",\n      \"recovered\": \"5px solid #244624\",\n      \"active\": \"5px solid #5c5c39\",\n      \"deaths\": \"5px solid #712424\",\n    }\n  }\n\n  handleChangeConfirm = () =>{\n    const cases = 'confirmed';\n    this.props.onChangeButton(cases);\n    this.props.addNowCase(3);\n  }\n  handleChangeActive = () =>{\n    const cases = 'active';\n    this.props.onChangeButton(cases);\n    this.props.addNowCase(3);\n  }\n  handleChangeRecovered = () =>{\n    const cases = 'recovered';\n    this.props.onChangeButton(cases);\n    this.props.addNowCase(3);\n  }\n  handleChangeDeaths = () =>{\n    const cases = 'deaths';\n    this.props.onChangeButton(cases);\n    this.props.addNowCase(3);\n  }\n  totalDashboad = (casesC) => {\n    if(this.props.dashboardTimeline.length === 0){\n      return;\n    }\n    const dashCases = this.props.dashboardTimeline[casesC];\n    if (dashCases) {\n      return dashCases.reduce((accumulator, currentVal) => {\n        return accumulator + +currentVal[this.props.nowCase];\n      }, 0);\n    }\n    return 0;\n  }\n  \n  render() {\n    let casesC = this.props.cases;\n    const confirmedLocations = this.props.allLocations.sort(function(a, b){\n      return b[casesC] - a[casesC];\n    });\n\n    \n    let totalTimelineCases = this.totalDashboad(casesC);\n  \n      return (\n      <div className='dashboard'>\n        <div \n          id=\"header-statistics\"\n          style={{border: this.state.border[`${casesC}`]}}\n        >\n        <div id=\"type-cases\">{casesC.charAt(0).toUpperCase() + casesC.slice(1)}</div>\n          <div \n            id=\"number-cases\" \n            className={casesC}\n          >\n            { this.props.activeCumulative ? \n              (this.props.globalValues[casesC] !== isNaN && this.props.globalValues[casesC] !== undefined ) ? (d3.format(',')(this.props.globalValues[casesC])) : null :\n               (totalTimelineCases !== undefined && totalTimelineCases === parseInt(totalTimelineCases, 10)) ?  d3.format(',')(totalTimelineCases) : null\n            }\n          </div>\n        </div>\n      \n        <ul style={{border: this.state.border[`${casesC}`]}}>\n          { this.props.activeCumulative ?(\n            confirmedLocations.map((location, idx)=>{\n            return (<li key={idx}><span className={casesC}>{d3.format(',')(location[casesC])}</span> {location.countryRegion}</li>)\n          })) : (\n            this.props.dashboardTimeline ?\n            (this.props.dashboardTimeline[`${casesC}`].map((location, idx)=>{\n            return (<li key={idx}><span className={casesC}>{ \n              (location[this.props.nowCase] >= 0 && location[this.props.nowCase] !== undefined) ?  d3.format(',')(location[this.props.nowCase]) : null}\n              </span> {location[1]}</li>)\n            })) : null\n          )}\n        </ul>\n        <div \n          id=\"cases-btns\"  \n          className=\"cases-btns\"\n          style={{borderTop: this.state.borderTop[`${casesC}`]}}\n        >\n          <button \n            className={casesC === 'confirmed' ? \"btn \" + casesC + \"-btn\" : \"btn\"}\n            onClick={this.handleChangeConfirm}>Confirmed\n          </button>\n          {this.props.activeCumulative ? \n            ( <button \n                className={casesC === 'active' ? \"btn \" + casesC + \"-btn\" : \"btn\"}\n                onClick={this.handleChangeActive}>Active\n                </button>) \n            : (null)\n          }\n          <button \n            className={casesC === 'recovered' ? \"btn \" + casesC + \"-btn\" : \"btn\"}\n            onClick={this.handleChangeRecovered}>Recovered\n            </button>\n          <button \n            className={casesC === 'deaths' ? \"btn \" + casesC + \"-btn\" : \"btn\"}\n            onClick={this.handleChangeDeaths}>Deaths\n            </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    locations: state.locations,\n    allLocations: state.allLocations,\n    cases: state.cases,\n    globalValues: state.globalValues,\n    activeCumulative: state.activeCumulative,\n    dashboardTimeline: state.dashboardTimeline,\n    timelineLength : state.timelineLength,\n    nowCase: state.nowCase\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onChangeButton: (cases) => { dispatch({type: 'CHNAGE_CASES', cases: cases})},\n    addNowCase: (nowCase) => { dispatch({type: 'ADD_NOWCASE', nowCase: nowCase})},   \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass Data extends Component {\n  componentDidMount() {\n    const typeOfCases = ['confirmed', 'deaths', 'recovered'];\n    let dashboardTimeline = {\n      confirmed: [],\n      deaths: [],\n      recovered: []\n    };\n    let uniqueNames = {\n      confirmed: [],\n      deaths: [],\n      recovered: []\n    };\n    let allTimelineCases = {\n      confirmed: [],\n      deaths: [],\n      recovered: []\n    };\n    let csvData = {};\n    typeOfCases.forEach((type, typeIdx) => {\n      fetch(`https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_${type}_global.csv`)\n        .then(res => res.text())\n        .then(text => {\n          \n          csvData[`${type}`] = text;\n\n          let allTextLines = text.split(/\\r\\n|\\n/);\n          let headers = allTextLines[0].split(',');\n          const date = headers.slice(4, headers.length)\n          this.props.setDate(date)\n  \n          let data;\n          for(let i=1; i<allTextLines.length; i++){\n            data = allTextLines[i].split(',');\n  \n            if(data.length === headers.length){\n              allTimelineCases[`${type}`].push(data);    \n            }\n          }\n          const timestamp = headers.slice(4, headers.length);\n          this.props.setTimestamp(timestamp);\n  \n          uniqueNames[`${type}`].push(...allTimelineCases[`${type}`].filter(all =>{\n            return all[0] === '';\n          }))\n          \n          let stateNames = allTimelineCases[`${type}`].filter(all =>{\n            return all[0] !== '';\n          });\n\n          stateNames.forEach(element=>{\n            let state = dashboardTimeline[`${type}`].find(computedState =>{\n              return computedState[1] === element[1];\n            })\n            if(state === undefined){\n              dashboardTimeline[`${type}`].push([...element])\n            } else {\n              // console.log(element.length)\n              for(let i=4; i<element.length; i++){\n                state[i] = parseInt(state[i]) + 0;\n                state[i] += parseInt(element[i])\n              }           \n            }\n          })\n          dashboardTimeline[`${type}`].push(...uniqueNames[`${type}`])\n\n          let timelineLength = dashboardTimeline[`${type}`][0].length;\n          this.props.setTimelineLength(timelineLength)\n          setTimeout(()=>{\n            dashboardTimeline[`${type}`].sort(function(a, b){\n              return b[timelineLength-1] - a[timelineLength-1];\n            });\n          },700)\n          setTimeout(()=>{\n            this.props.setDashboardTimeline(dashboardTimeline)\n          }, 800);\n          \n          if (typeIdx === typeOfCases.length-1) {\n            setTimeout(()=>{\n              this.props.addTimelineCases(allTimelineCases);\n            }, 600);\n          }\n        })\n        .catch(() => this.setState({ hasErrors: true }));\n      });\n\n        fetch(\"https://covid19.mathdro.id/api/confirmed\")\n        .then(res => res.json())\n        .then(res => {\n          let uniqueNames = res.filter(re => {\n            return re.provinceState === null;\n          })\n          let stateNames = res.filter(re => {\n            return re.provinceState !== null;\n          })\n          let computedStates = [];\n          stateNames.forEach((element)=>{\n            let state = computedStates.find((computedState)=>{\n              return computedState.provinceState === element.provinceState;\n            });\n            if(state === undefined){\n              computedStates.push({\n                ...element\n              });\n            } else {\n              state.confirmed += element.confirmed;\n              state.recovered += element.recovered;\n              state.deaths += element.deaths;\n              state.active += element.active;\n              // console.log(state)\n            }\n          });\n          \n          // values for map display\n          let mapLocations = computedStates.concat(uniqueNames);\n          // add mapLocations to state\n          this.props.addLocations(mapLocations)\n          \n          let countries = [];\n          computedStates.forEach((element)=>{\n            let state = countries.find((country)=>{\n              return country.countryRegion === element.countryRegion;\n            });\n            if(state === undefined){\n              countries.push({\n                ...element\n              });\n            } else {\n              state.confirmed += element.confirmed;\n              state.recovered += element.recovered;\n              state.deaths += element.deaths;\n              state.active += element.active;\n            }\n          })\n          // values for dashboard\n          let allLocations = countries.concat(uniqueNames);\n          let all = [];\n          allLocations.forEach((element)=>{\n            let state = all.find((country)=>{\n              return country.countryRegion === element.countryRegion;\n            });\n            if(state === undefined){\n              all.push({\n                ...element\n              });\n            } else {\n              state.confirmed += element.confirmed;\n              state.recovered += element.recovered;\n              state.deaths += element.deaths;\n              state.active += element.active;\n            }\n          })\n          // add allLocations values to state\n          this.props.addAllLocations(all);\n        })\n        .catch(err => console.log(err));\n        \n        fetch(\"https://covid19.mathdro.id/api\")\n        .then(res=> res.json())\n        .then(res => {\n          let globalValues = {\n            confirmed: res.confirmed.value,\n            recovered: res.recovered.value,\n            deaths: res.deaths.value,\n            active: res.confirmed.value - (res.recovered.value + res.deaths.value)\n          }\n          // add global values to state\n          this.props.addGlobalValues(globalValues);\n        })\n        .catch(err => console.log(err));\n\n  }\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    locations: state.locations,\n    allLocations: state.allLocations,\n    cases: state.cases,\n    activeCumulative: state.activeCumulative,\n    timelineCases: state.timelineCases,\n    nowCase: state.nowCase,\n    intervalId: state.intervalId,\n    minRadius: state.minRadius,\n    maxRadius: state.maxRadius\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setDate: (date)=> { dispatch({type: 'SET_DATE', date: date})},\n    addLocations: (locations) => { dispatch({type: 'ADD_LOCATIONS', locations: locations})},\n    addAllLocations: (allLocations) => { dispatch({type: 'ADD_ALLLOCATIONS', allLocations: allLocations})},\n    addGlobalValues: (globalValues) => { dispatch({type: 'ADD_GLOBALVALUES', globalValues: globalValues})},\n    addTimelineCases: (timelineCases) => { dispatch({type: 'ADD_TIMELINECASES', timelineCases: timelineCases})},\n    setDashboardTimeline: (dashboardTimeline) => { dispatch({type: 'SET_DASHBOARDTIMELINE', dashboardTimeline: dashboardTimeline})},\n    setTimelineLength: (timelineLength) => { dispatch({type: 'SET_TIMELINELENGTH', timelineLength: timelineLength})},\n    setTimestamp: (timestamp) => { dispatch({type: 'SET_TIMESTAMP', timestamp: timestamp})}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Data);","import React from 'react';\n\nconst ChartFirstPage = (props) => {\n  return (\n    <div className={props.props}>\n       <div className='chart-first-page'>\n         \n          <div \n            className=\"title-left\">\n              <div>\n                <p\n                  data-aos=\"fade-right\" \n                  data-aos-offset=\"200\"\n                  data-aos-delay=\"50\"\n                  data-aos-duration=\"1000\"\n                  data-aos-easing=\"ease-in-out\">\n                  Evolution of Covid-19 cases\n                </p>\n              </div>\n              <div data-aos=\"fade-up\"\n                  data-aos-offset=\"200\"\n                  data-aos-delay=\"500\"\n                  data-aos-duration=\"1000\">\n                <svg\n               \n                  className=\"icon-barchart\" \n                  xmlns=\"http://www.w3.org/2000/svg\" \n                  xmlnsXlink=\"http://www.w3.org/1999/xlink\" \n                  version=\"1.1\" id=\"Capa_1\" x=\"0px\" y=\"0px\" \n                  viewBox=\"0 0 512 512\" \n                  style={{enableBackground:\"new 0 0 512 512\", transition: \"inherit\", transform: \"rotate(90deg);transform: scale(0.3)\"}}\n                >\n                  <path style={{fill:\"#ED1C24\"}} d=\"M419.672,390.295h67.148v75.541h-67.148V390.295z\" />\n                  <path style={{fill:\"#F68B1F\"}} d=\"M318.951,297.967h67.148v167.869h-67.148V297.967z\"/>\n                  <path style={{fill:\"#F15A22\"}} d=\"M218.229,339.934h67.148v125.902h-67.148V339.934z\"/>\n                  <path style={{fill:\"#F68B1F\"}} d=\"M117.508,197.246h67.148v268.59h-67.148V197.246z\"/>\n                  <path style={{fill:\"#FDB913\"}} d=\"M16.787,79.738h67.148v386.098H16.787V79.738z\"/>\n                </svg>\n              </div>\n          </div>\n          <div className=\"title-right\">\n            <div \n              data-aos=\"fade-left\" \n              data-aos-duration=\"1000\"\n              >\n              <p>Press one of the buttons bellow</p>\n            </div>\n            <div\n              className=\"text-scroll\"\n              data-aos=\"fade-left\"\n              data-aos-delay=\"500\"\n              data-aos-duration=\"1500\"\n              >\n              <p>Or scroll for more charts</p>\n            </div>\n           <div data-aos=\"zoom-in\"\n           className=\"mouse-scroll\"></div>\n          </div>\n        </div>\n    </div>\n  )\n}\n\nexport default ChartFirstPage;","import { useEffect, useState } from \"react\";\n\nfunction getWindowDimensions() {\n  const {  innerWidth, innerHeight } = window;\n  return {\n    innerWidth,\n    innerHeight\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}","\nimport { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nconst useResizeObserver = ref => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;","import React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport { rollup, groups } from 'd3-array';\nimport { useSelector } from \"react-redux\";\nimport ChartFirstPage from './ChartFirstPage';\nimport useWindowDimensions from './GetDimensions';\nimport useResizeObserver from \"../utils/useResizeObserver\";\n\nconst Barchart = () => {\n\n  let dashboardTimeline = useSelector(state => state.dashboardTimeline);\n  let displayFirstPage = useSelector(state => state.displayFirstPage);\n  // let isBarChart = useSelector(state => state.isBarChart);\n  let date = useSelector(state => state.date);\n  let dataArr = [];\n\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  \n  const [ cases ] = useState('');\n  const [ hide, hideChartFirstPage ] = useState('');\n  const {  innerWidth } = useWindowDimensions();\n\n  let chartStarted = false;\n\n  useEffect(() => {\n    dimensions || wrapperRef.current.getBoundingClientRect();\n    if(dashboardTimeline.length === 0){\n      return;\n    }\n    if(cases === '' || displayFirstPage === 'show') {\n      chartStarted = false;\n      return;\n    } else {\n      startChart(cases);\n    }\n  }, [cases, dashboardTimeline, dataArr, date]);\n\n  function wait(millis) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve(true);\n      }, millis);\n    });\n  }\n\n  async function startChart(cases) {\n    chartStarted = false;\n    d3.select('#cases-btns').style('opacity', '0');\n    await wait(200);\n    // d3.select('#cases-btns').style('opacity', '1');\n\n    let axisExists = d3.select('#axis-group');\n\n    if (axisExists.node() != null) {\n      d3.selectAll('#axis-group').remove();\n      d3.selectAll('#bar-group').remove();\n      d3.select('#label-group').selectAll().remove();\n      d3.select('#label-group').remove();\n      d3.selectAll('#ticker-group').remove();\n    }\n    \n\n    hideChartFirstPage('hide-component');\n    // showBarChart('show');\n    dashboardTimeline[`${cases}`].forEach((array, index)=>{\n      date.forEach((dat, idx) => {\n        let obj = {\n          date: new Date(dat),\n          name: array[1],\n          value: parseInt(array[idx+4])\n        }\n        dataArr.push(obj)\n      })\n    })\n\n    const checkChart = d3.select('#axis-group')['_groups'][0];\n\n    if(checkChart[0] !== null){\n      d3.select(\".chart\").html(\"\");\n    }\n\n    const names = new Set(dataArr.map(d => d.name));\n\n    const dateValues = Array.from(rollup(dataArr, ([d]) => d.value, d => +d.date, d => d.name))\n    .map(([date, dataArr]) => [new Date(date), dataArr])\n    .sort(([a], [b]) => d3.ascending(a, b));\n    \n    const n = 12;\n    function rank(value) {\n      const data = Array.from(names, name => ({name, value: value(name)}));\n      data.sort((a, b) => d3.descending(a.value, b.value));\n      for (let i = 0; i < data.length; ++i) data[i].rank = Math.min(n, i);\n      return data;\n    }\n\n    const k = 2;\n    const keyframes = [];\n    let ka, a, kb, b;\n    for ([[ka, a], [kb, b]] of d3.pairs(dateValues)) {\n      for (let i = 0; i < k; ++i) {\n        const t = i / k;\n        keyframes.push([\n          new Date(ka * (1 - t) + kb * t),\n          rank(name => (a.get(name) || 0) * (1 - t) + (b.get(name) || 0) * t)\n        ]);\n      }\n    }\n    keyframes.push([ (kb), rank(name => b.get(name) || 0)]);\n\n    const nameframes = groups(keyframes.flatMap(([, data]) => data), d => d.name);\n    const prev = new Map(nameframes.flatMap(([, data]) => d3.pairs(data, (a, b) => [b, a])));\n    const next = new Map(nameframes.flatMap(([, data]) => d3.pairs(data)))\n    \n    \n    const duration = 250;\n\n    const svg = d3.select(svgRef.current);        \n    const margin = ({top: 16, right: 6, bottom: 6, left: 0});\n    let barSize;\n    // let height = margin.top + barSize * n + margin.bottom;\n    let width;\n    if(innerWidth < 410){\n      width = 270;\n      barSize = 24;\n    } else if(innerWidth < 650){\n      width = 320;\n      barSize = 30;\n    } else if(innerWidth < 750){\n      barSize = 30;\n      width = 450;\n    } else if(innerWidth < 850){\n      width = 550;\n      barSize = 35;\n    } else if(innerWidth < 1000){\n      width = 600;\n      barSize = 35;\n    } else if(innerWidth < 1200){\n      barSize = 40;\n      width = 660;\n    } else if(innerWidth < 1455){\n      barSize = 40;\n      width = 720;\n    } else {\n      width = 1000;\n      barSize = 48;\n    }\n\n    const transition = svg.transition()\n        .duration(duration)\n        .ease(d3.easeLinear);\n\n    const y = d3.scaleBand()\n    .domain(d3.range(n + 1))\n    .rangeRound([margin.top, margin.top + barSize * (n + 1 + 0.1)])\n    .padding(0.1);\n\n    const x = d3.scaleLinear([0, 1], [margin.left, width - margin.right]);\n\n    const color ={\n      \"confirmed\": \"#a74222\",\n      \"recovered\": \"#244624\",\n      \"deaths\": \"#712424\"\n    }\n\n    function bars(svg){\n      d3.select('#bar-group').style(\"display\", \"none\")\n      let bar = svg.append(\"g\")\n          .attr(\"fill-opacity\", 1)\n          .attr(\"id\", \"bar-group\")\n          .selectAll(\"rect\");\n\n      return ([date, dataArr]) => bar = bar\n        .data(dataArr.slice(0, n), d => d.name)\n        .join(\n          enter => enter.append(\"rect\")\n            .attr(\"fill\", color[`${cases}`])\n            .attr(\"opacity\", 1)\n            .attr(\"height\", y.bandwidth())\n            .attr(\"x\", x(0))\n            .attr(\"y\", d => y((prev.get(d) || d).rank))\n            .attr(\"width\", d => x((prev.get(d) || d).value) - x(0)),\n          update => update,\n          exit => exit.transition(transition).remove()\n            .attr(\"y\", d => y((next.get(d) || d).rank))\n            .attr(\"width\", d => x((next.get(d) || d).value) - x(0))\n        )\n        .call(bar => bar.transition(transition)\n          .attr(\"y\", d => y(d.rank))\n          .attr(\"width\", d => x(d.value) - x(0)));\n    }\n\n    function labels(svg) {\n      if (d3.select('#label-group').node() == null) {\n        d3.select('#label-group').selectAll().remove();\n        d3.select('#label-group').remove();\n      }\n\n      let label = svg.append(\"g\")\n        .style(\"font\", \"bold 10px var(--sans-serif)\")\n        .attr(\"fill\", \"#fff\")\n        .attr(\"id\", \"label-group\")\n        .style(\"font-variant-numeric\", \"tabular-nums\")\n        .attr(\"text-anchor\", \"end\")\n        .selectAll(\"text\");\n\n      return ([date, dataArr], transition) => {\n        if (!label) {\n          return;\n        }\n        return label = label\n          .attr('id', 'label-group')\n          .data(dataArr.slice(0, n), d => d.name)\n          .join(\n            enter => enter.append(\"text\")\n            .attr(\"transform\", d => `translate(${x((prev.get(d) || d).value)},${y((prev.get(d) || d).rank)})`)\n            .attr(\"y\", y.bandwidth() / 2)\n            .attr(\"x\", -6)\n            .attr(\"dy\", \"-0.25em\")\n            .text(d =>  d.name)\n            .call(text => text.append(\"tspan\")\n            .attr(\"fill-opacity\", 1)\n            .attr(\"font-weight\", \"normal\")\n            .attr(\"x\", -6)\n            .attr(\"dy\", \"1.15em\")),\n            update => update,\n            exit => exit.transition(transition).remove()\n            .attr(\"transform\", d => {\n              return `translate(${x((next.get(d) || d).value)},${y((next.get(d) || d).rank)})`;\n            })\n            .call(g => g.select(\"tspan\").tween(\"text\", d => textTween(d.value, (next.get(d) || d).value)))\n            )\n            .call(bar => bar.transition(transition)\n            .attr(\"transform\", d => `translate(${x(d.value)},${y(d.rank)})`)\n            .call(g => g.select(\"tspan\").tween(\"text\", d => textTween((prev.get(d) || d).value, d.value))));\n      }\n    }\n\n    const formatNumber = d3.format(\",d\");\n\n    function textTween(a, b) {\n      const i = d3.interpolateNumber(a, b);\n      return function(t) {\n        this.textContent = formatNumber(i(t));\n      };\n    }\n\n    const formatDate = d3.utcFormat(\"%B %d, %Y\");\n\n    function axis(svg) {\n      let g = d3.select('#axis-group');\n      if(g.node() == null){\n        g = svg.append(\"g\")\n            .attr(\"fill\", \"#fff\")\n            .attr('id', 'axis-group')\n            .attr(\"transform\", `translate(0,${margin.top})`);\n      }\n      const axis = d3.axisTop(x)\n          .ticks(width / 160)\n          .tickSizeOuter(0)\n          .tickSizeInner(-barSize * (n + y.padding()));     \n          return (_, transition) => {\n            g.transition(transition).call(axis)\n            g.selectAll(\".tick:not(:first-of-type) line\").attr(\"stroke\", \"#222\");\n            g.selectAll(\".tick:first-of-type text\").remove()\n            g.select(\".domain\").remove();\n          };\n    }        \n    \n    function ticker(svg) {\n      let now = d3.select('#ticker-group');\n      if(now.node() == null){\n        now = svg.append(\"text\")\n        .style(\"font\", `bold ${barSize}px var(--sans-serif)`)\n        .style(\"font-variant-numeric\", \"tabular-nums\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"id\", \"ticker-group\")\n        .attr(\"x\", width - 6)\n        .attr(\"y\", margin.top + barSize * (n - 0.45))\n        .attr(\"dy\", \"0.32em\")\n        .attr(\"fill\", \"#fff\")\n        .text(formatDate(keyframes[0][0]));\n      }\n      \n      return ([date], transition) => {\n        transition.end().then(() => { now.text(formatDate(date))})\n        \n        let dt = new Date();\n        if(formatDate(date) === formatDate(dt.setDate(dt.getDate() -2))){\n          d3.select('#cases-btns').style('opacity', '1')\n        }\n      };\n    }\n\n    const startC = async function chart(){\n      const svg = d3.select(svgRef.current);\n      const updateAxis = axis(svg);\n      const updateBars = bars(svg);\n      const updateLabels = labels(svg);\n      const updateTicker = ticker(svg);\n      \n      chartStarted = true;\n      for (const keyframe of keyframes) {\n        if (!chartStarted) {\n          break;\n        }\n        const transition = svg.transition()\n            .duration(duration)\n            .ease(d3.easeLinear);\n\n        x.domain([0, keyframe[1][0].value]);\n        \n        updateAxis(keyframe, transition);\n        updateBars(keyframe, transition);\n        updateLabels(keyframe, transition);\n        updateTicker(keyframe, transition);\n        \n        await transition.end();\n      }\n    }\n\n    startC().then(() => {}).catch(err => console.log('wtf?', err));\n  }\n\n  // function capitalizeFirstLetter(string) {\n  //   return string.charAt(0).toUpperCase() + string.slice(1);\n  // }\n  \n  return (\n    <React.Fragment>\n      <div className=\"chart-container\">\n        <div className=\"svg-container\" ref={wrapperRef}>\n          {/* <svg className={ (isBarChart) ? \"chart hide\" : 'chart show'} ref={svgRef} ></svg> */}\n          <svg className=\"chart\" ref={svgRef} ></svg>\n          <ChartFirstPage props={hide}/>\n          <div \n            id=\"cases-btns\" \n            // className={(!isBarChart) ? \"cases-btns\" : \"cases-btn show\"}\n            className=\"cases-btns\"\n            style={{borderTop: \"none\",\n                    width: \"70%\",\n                    margin: \"0 auto\",\n                    textAlign: \"end\"\n                  }}\n            // data-aos=\"fade-left\"\n            data-aos-offset=\"200\"\n            data-aos-delay=\"500\"\n            data-aos-duration=\"2000\"\n          >\n            <button \n              // style={{ width: \"10%\" }} \n              className=\"confirmed-btn btn\"\n              onClick={() => startChart('confirmed') }\n              // onClick={() => setState('confirmed')}\n              >Confirmed\n            </button>\n            <button \n              // style={{ width: \"10%\" }}\n              className=\"recovered-btn btn\" \n              onClick={() => startChart('recovered')}>Recovered\n            </button>\n            <button \n              className=\"deaths-btn btn\"\n              // style={{ width: \"10%\" }}\n              onClick={() => startChart('deaths')}>Deaths\n            </button>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default Barchart;","import React, { useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport * as d3 from \"d3\";\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\nimport useResizeObserver from \"../utils/useResizeObserver\";\n\nconst StackedAreaChart = () => {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);;\n  const globalValues = useSelector(state => state.globalValues);\n  let timelineCases = useSelector(state => state.timelineCases);\n  let timelinecasesloaded = useSelector(state => state.timelineCasesLoaded);\n  let timestamp = useSelector(state => state.timestamp);\n  \n  useEffect(() => {\n    Aos.init({duration: 3000})\n    const { width, height } =\n    dimensions || wrapperRef.current.getBoundingClientRect()\n    const arrayCases = [\"confirmed\", \"recovered\", \"deaths\"];\n    let colorsArray = [\"#ad4828\", \"#244624\", \"#712424\"];\n    const numberCases = [0, 1, 2];\n    let computedData = [];\n\n    timestamp.forEach((date, index)=>{\n      arrayCases.forEach((typeCase)=>{\n        timelineCases[`${typeCase}`].forEach((cases, idx)=>{\n          \n          let record = computedData.find(domain => {\n            return domain.dateStr === date && domain.case === typeCase;\n          });\n          \n          if(cases[index+4] !== undefined){\n            if(record === undefined){\n              computedData.push({\n                case: typeCase,\n                xValue: Date.parse(date),\n                dateObj: new Date(date),\n                dateStr: date,\n                yValue: parseInt(cases[index+4])\n              })\n            } else {\n              record.yValue += parseInt(cases[index+4])\n            }\n          }\n        })\n      })\n    });\n  \n    if (computedData.length === 0) {\n      return;\n    }\n\n    const sumstat = d3.nest()\n          .key(function(d) {\n            return d.xValue\n          })\n          .entries(computedData);\n\n    const stackedData = d3.stack()\n    .keys(numberCases)\n    .value(function(d, key) {\n      if (d.values[key] === undefined) {\n      }\n      return d.values[key].yValue;\n    })\n    (sumstat);\n\n    const svg = d3.select(svgRef.current);\n\n    let x = d3.scaleUtc()\n        .domain([computedData[0].dateObj, computedData[computedData.length-1].dateObj])\n        .range([ 0, width ]);\n\n    // selects chart and removes everything\n    svg.selectAll(\"*\").remove();\n\n    const xAxis = svg.append(\"g\")\n        .attr(\"transform\", `translate(0, ${height})`)\n        .call(d3.axisBottom(x).ticks(6))\n\n      // add label for x axis\n      xAxis.append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"fill\", \"#545454\")\n      .attr(\"y\", 30)\n      .attr(\"x\", width/2)\n      .text(\"Date\");\n\n      let maxYDomain = globalValues.confirmed + globalValues.deaths + globalValues.recovered;\n\n      const yAxisTickFormat = number => \n      d3.format('.1s')(number)\n      .replace('G', 'M')\n    \n      const y = d3.scaleLinear()\n        .domain([0, maxYDomain ])\n        .range([ height, 0 ]);\n      const yAxis = svg.append(\"g\")\n        .call(d3.axisLeft(y).ticks(7)\n        .tickFormat(yAxisTickFormat))\n\n      // add label for y axis\n      yAxis.append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"fill\", \"#545454\")\n      .attr(\"y\", -30)\n      .attr(\"x\", -height/2)\n      .attr(\"transform\", `rotate(-90)`)\n      .style(\"text-anchor\", \"middle\")\n      .text(\"Number of cases\");\n\n      // color palette\n      const color = d3.scaleOrdinal()\n        .domain(arrayCases)\n        .range(colorsArray);\n\n      // Add Brushing\n      // clip path so the chart will not overflow\n      svg.append(\"defs\").append(\"svg:clipPath\")\n        .attr(\"id\", \"clip\")\n        .append(\"svg:rect\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        \n      const brush = d3.brushX()\n        .extent([[0,0], [width, height]])\n        .on(\"end\", updateChart);\n\n      // Create the scatter variable: where both the circles and the brush take place\n      const areaChart = svg.append(\"g\")\n        .attr(\"clip-path\", \"url(#clip)\");\n      \n      areaChart.append(\"g\")\n        .attr(\"class\", \"brush\")\n        .call(brush);\n\n      const area = d3.area()\n        .x(function(d) { \n          return x(d.data.values[0].dateObj)\n        })\n        .y0(function(d) {\n          return y(d[0])\n        })\n        .y1(function(d) { \n          return y(d[1])\n        });\n\n      const div = d3.select(\"body\").append(\"div\")\t\n        .attr(\"class\", \"tooltip\")\t\t\t\t\n        .style(\"opacity\", 0);\n\n      areaChart\n        .selectAll(\"mylayers\")\n        .data(stackedData)\n        .enter()\n        .append(\"path\")\n          .attr(\"class\", function(d) {\n            return \"myArea \" + d.key })\n          .attr(\"data-key\", function(d) { return d.key; })\n          .style(\"fill\", function(d) {\n            return color(d.key);\n          })\n          .attr(\"d\", area)\n          .on(\"mousemove\", function(dataSet) {\n\n            let currentElement = x.invert(d3.mouse(this)[0]);\n            let currentElementString = String(currentElement).slice(0,15);\n\n            let popupElements = currentElementString.slice(3,15) + \"<br />\";\n            dataSet.forEach((data)=>{\n              if(String(data.data.values[0].dateObj).slice(0,15) === currentElementString){\n                data.data.values.forEach(value => {\n                  popupElements += `<span class=\"tooltip\"></span>${(value.case).charAt(0).toUpperCase() + (value.case).slice(1)}: ${d3.format(',')(value.yValue)}<br />`;\n                })\n              }\n            })\n            div.transition()\t\t\n              .duration(200)\n              .style(\"display\", \"block\")\t\n              .style(\"opacity\", .9);\n\n            div.html(popupElements)\t\n              .style(\"left\", (d3.event.pageX - 70) + \"px\")\t\t\n              .style(\"top\", (d3.event.pageY - 120) + \"px\");\n          })\n          .on(\"mouseleave\", function(d) {\n            div.transition()\t\t\n                .duration(500)\t\t\n                .style(\"display\", \"none\");\t\n          });\n\n      let idleTimeout;\n      function idled() { idleTimeout = null; }\n\n      // Update the chart for given boundaries\n      function updateChart() {\n        const extent = d3.event.selection;\n        \n        if(!extent) {\n          if (!idleTimeout) return idleTimeout = setTimeout(idled, 350); // This allows to wait a little bit\n          x.domain(d3.extent(computedData, function(d) {\n            return d.dateObj }))\n        } else {\n          x.domain([ x.invert(extent[0]), x.invert(extent[1]) ])\n          areaChart.select(\".brush\").call(brush.move, null)\n        }\n\n        // Update axis and area position\n        xAxis.transition().duration(1000).call(d3.axisBottom(x).ticks(6))\n        areaChart\n          .selectAll(\"path\")\n          .transition().duration(1000)\n          .attr(\"d\", area);\n        \n      }\n\n  }, [dimensions, timelinecasesloaded])\n\n  return (\n    <React.Fragment>\n    <div className=\"stacked-chart-container\">\n      <div data-aos=\"slide-up\" className=\"svg-stacked-container\" ref={wrapperRef}>\n      <p className=\"title-stacked-chart\">Covid-19 Cases</p>\n        <svg className=\"stacked-chart\" ref={svgRef}></svg>\n      </div>\n    </div>\n  </React.Fragment>\n  )\n}\n\nexport default StackedAreaChart;","import React from 'react';\nimport BarChart from './BarChart';\nimport StackedAreaChart from './StackedAreaChart';\n// import ChartFirstPage from './ChartFirstPage';\n\nconst Charts = () => {\n  \n  return (\n    <div>\n      {/* <ChartFirstPage /> */}\n    <div className=\"charts-container\">\n      <BarChart />\n      <StackedAreaChart />\n    </div>\n    </div>\n  )\n}\n\nexport default Charts;","import React from 'react';\nimport Header from './Components/Header';\nimport MapCovid from './Components/MapCovid';\nimport Dashboard from './Components/Dashboard';\nimport Data from './Components/Data';\nimport Charts from './Components/Charts';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Route path={['/', '/barchart']} component={Data}/>\n          <div className='container'>\n            <Route path='/' exact component={MapCovid} />\n            <Route path='/' exact component={Dashboard} />\n          </div>\n            <Route path='/charts' component={Charts}/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const initState = {\n  activeCumulative: true,\n  activeTimeline: false,\n  allLocations: [],\n  cases: 'confirmed',\n  computedData: [],\n  dashboardTimeline: [],\n  globalValues: {},\n  hasErrors: false,\n  keyframes: [],\n  locations: [],\n  nowCase: 3,\n  numberOfCases: 0,\n  timelineCases: [],\n  timelineCasesLoaded: false,\n  timelineLength: 0,\n  timestamp:[],\n}\n\nconst dataReducer = (state = initState, action )=>{\n  if(action.type === 'SET_DATE'){\n    let newState = { ...state };\n    newState.date = action.date\n    return newState;\n  }\n  if(action.type === 'ADD_LOCATIONS'){\n    let newState = { ...state };\n    newState.locations = action.locations\n    return newState;\n  }\n  if(action.type === 'ADD_ALLLOCATIONS'){\n    let newState = { ...state };\n    newState.allLocations = action.allLocations;\n    return newState;\n  }\n  if(action.type === 'CHNAGE_CASES'){\n    let newState = { ...state };\n    newState.cases = action.cases;\n    return newState;\n  }\n  if(action.type === 'ADD_GLOBALVALUES'){\n    let newState = { ...state };\n    newState.globalValues = action.globalValues;\n    return newState;\n  }\n  if(action.type === 'TOGGLE_TIMELINE'){\n    let newState = { ...state };\n    newState.activeCumulative = action.active.activeCumulative;\n    newState.activeTimeline = action.active.activeTimeline;\n    newState.nowCase = action.active.nowCase;\n    return newState;\n  }\n  if(action.type === 'TOGGLE_CUMULATIVE'){\n    let newState = { ...state };\n    newState.activeCumulative = action.active.activeCumulative;\n    newState.activeTimeline = action.active.activeTimeline;\n    return newState;\n  }\n  if(action.type === 'ADD_TIMELINECASES'){\n    let newState = { ...state };\n    newState.timelineCasesLoaded = true;\n    newState.timelineCases = action.timelineCases;\n    return newState;\n  }\n  if(action.type === 'SET_DASHBOARDTIMELINE'){\n    let newState = { ...state };\n    newState.dashboardTimeline = action.dashboardTimeline;\n    return newState;\n  }\n  if(action.type === 'SET_TIMELINELENGTH'){\n    let newState = { ...state };\n    newState.timelineLength = action.timelineLength;\n    return newState;\n  }\n  if(action.type === 'ADD_NUMBEROFCASES'){\n    let newState = { ...state };\n    newState.numberOfCases = action.numberOfCases;\n    return newState;\n  }\n  if(action.type === 'ADD_NOWCASE'){\n    let newState = { ...state };\n    newState.nowCase = action.nowCase;\n    return newState;\n  }\n  if(action.type === 'ADD_INTERVALID'){\n    let newState = { ...state };\n    newState.intervalId = action.intervalId;\n    return newState;\n  }\n  if(action.type === 'SET_MINRADIUS'){\n    let newState = { ...state };\n    newState.minRadius = action.minRadius;\n    return newState;\n  }\n  if(action.type === 'SET_MAXRADIUS'){\n    let newState = { ...state };\n    newState.maxRadius = action.maxRadius;\n    return newState;\n  }\n  if(action.type === 'SET_TIMESTAMP'){\n    let newState = { ...state };\n    newState.timestamp = action.timestamp;\n    return newState;\n  }\n  if(action.type === 'SET_DATAARR'){\n    let newState = { ...state };\n    newState.dataArr = action.dataArr;\n    return newState;\n  }\n  if(action.type === 'SET_KEYFRAMES'){\n    let newState = { ...state };\n    newState.keyframes = action.keyframes;\n    return newState;\n  }\n  if(action.type === 'SET_PREV'){\n    let newState = { ...state };\n    newState.prev = action.prev;\n    return newState;\n  }\n  if(action.type === 'SET_NEXT'){\n    let newState = { ...state };\n    newState.prev = action.next;\n    return newState;\n  }\n  if(action.type === 'SET_FIRSTPAGE'){\n    let newState = { ...state };\n    newState.displayFirstPage = action.displayFirstPage;\n    return newState;\n  }\n  return state;\n}\n\nexport default dataReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport dataReducer from './reducers/dataReducer';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(dataReducer);\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}